server {
  listen 80;
  listen [::]:80;

  # add your domain name(s)
  server_name lambda-mono.cf;  
  
  location ~ /.well-known/acme-challenge {
        allow all;
        root /var/www/html;
  }

   # redirect
  location / {
        rewrite ^ https://$host$request_uri? permanent;
  }

}


server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name lambda-mono.cf;
    
  index index.php index.html index.htm;

  root /var/www/html;  
    
  server_tokens off;


  ssl_certificate /etc/letsencrypt/live/lambda-mono.cf/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/lambda-mono.cf/privkey.pem;
  
  # some security headers ( optional )
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "no-referrer-when-downgrade" always;
  add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;

  location / {
        try_files $uri $uri/ /index.php$is_args$args;
  }


  location ~ \.php$ {
          try_files $uri =404;
          fastcgi_split_path_info ^(.+\.php)(/.+)$;
          
          # proxy pass to the container name and port
          # we didn't expose wordpress's 9000 port to our host,
          # but wordpress still 'exposes' a port between the 
          # containers
          fastcgi_pass wordpress:9000;          

          fastcgi_index index.php;
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_param PATH_INFO $fastcgi_path_info;
  } 

  location ~ /\.ht {
          deny all;
  }  

  location = /favicon.ico { 
          log_not_found off; access_log off; 
  }
  
  location = /favicon.svg { 
          log_not_found off; access_log off; 
  }

  location = /robots.txt { 
          log_not_found off; access_log off; allow all; 
  }
  
  location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
          expires max;
          log_not_found off;
  }
}
